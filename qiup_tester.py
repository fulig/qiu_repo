from pyftdi.ftdi import Ftdi
from Qiup import Qiup
import time
from voltages import *

qiup = Qiup(debug=True)


#print("API Version")
#qiup.get_api_version()
#print("APPL Version")
#qiup.get_appl_version()
print("Register")
if qiup.register(0) == 1:
    print("Already registered. Releasing..")
    qiup.release()
    print("Retry register..")
    qiup.register(0)
time.sleep(1)
qiup.register_retrigger()
qiup.control_power(1,QP_API_LED_SUPPLY_VOLTAGE)
qiup.get_voltage(QP_API_ACCU_VOLTAGE)
qiup.get_voltage(QP_API_USB_VOLTAGE)
qiup.get_voltage(QP_API_DIG_SUPPLY_VOLTAGE)
#qiup.ledbar_control(2)
#qiup._trigger_reject()
#time.sleep(14)
#qiup.register_retrigger()
#print("Gain")
#qiup.get_gain()
#qiup.read_flash(4444, 1)
#data = bytearray()
#data.extend(b'\x00\x01\x02\x03\x04\x05\x06\x07\x06\x09\xAA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
#qiup.write_flash(44, 44, 1, data)
#qiup.erase_flash(4444)
#qiup.read_flash(4444, 1)
#print("EARCLIP") 
#qiup.check_earclip()

#qiup.ledbar_control(0)
#
#qiup.ledbar_control(4)
#print("LED bar 8 ")
#qiup.ledbar_control(32)
#qiup.release()
#qiup.get_charge_state()
#qiup.get_voltage(0)
#qiup.get_voltage(1)
#qiup.get_voltage(2)
#qiup.get_voltage(3)
#qiup.dim_led("R", 65)
#qiup.dim_led("G", 65)
#qiup.control_power(1, 0)
#qiup.get_charge_state()
#qiup.control_irled_ext(0)
#qiup.control_irled_ext(1)
#qiup.control_irled_intern(1)
#print("Wait")
#time.sleep(14)
#print("Retrigger")
#qiup.register_retrigger()
#print("Release")
#qiup.release()
#qiup._trigger_reject()
#print(hex(ord("G")))